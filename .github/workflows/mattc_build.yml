name: Build Armbian for RockPi-4B+

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build-armbian:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get SunScan setup
        run: |
          echo "THIS SHOULD BE SOURCE LEVEL"
          ls -lha .
          echo "THIS SHOULD BE HOME LEVEL"
          ls -lha /home
          export $ROOTFS_DIR=/home
          export $WORK_DIR=/home/.build
          echo "ROOTFS_DIR ----> " $ROOTFS_DIR
          echo "WORK_DIR ----> " $WORK_DIR
          mkdir -p custom-gen-sunscan/01-prepare-repo
          cat > custom-gen-sunscan/01-prepare-repo/00-run.sh <<-EOF
          #!/bin/bash
          git clone ${{ github.server_url }}/${{ github.repository }}.git --branch ${{ github.head_ref }} --depth 1 \${WORK_DIR}/tmp/repo
          EOF
          chmod +x custom-gen-sunscan/01-prepare-repo/00-run.sh

      - name: test
        run: |
          ls -lha
          
      #- name: Set up environment
      #  run: |
       #   sudo apt-get update
       #   sudo apt-get install -y \
       #     git \
        #    curl \
       #     unzip \
        #    wget \
         #   xz-utils

      #- name: Install dependencies
        #run: |
          #sudo apt-get install -y \
          #  gcc \
         #   g++ \
          #  make \
          #  bc \
           # bison \
            #flex \
           # libssl-dev \
           # libncurses5-dev \
         #   libncursesw5-dev \
          #  qemu-user-static \
           # debootstrap \
          #  binfmt-support \
          #  build-essential \
          #  u-boot-tools \
           # device-tree-compiler

      - name: Clone Armbian build repository
        run: |
          git clone --depth 1 https://github.com/armbian/build.git
          echo "THIS SHOULD STILL BE HOME DIR"
          ls -lha
      #- name: Configure build
       # run: |
        #  cd build
       #   ./compile.sh EXPERT=yes \
        #    BOARD=rockpi-4bplus \
       #     BRANCH=current\
        #    RELEASE=bookworm \
        #    BUILD_MINIMAL=yes \
        #    KERNEL_CONFIGURE=no \
        #    COMPRESS_OUTPUTIMAGE=xz \
         #   IMAGE_XZ_COMPRESSION_RATIO=6
            
        #  ls -lha output/images
          
     # - name: Upload Armbian image
      #  uses: actions/upload-artifact@v4
        #with:
      #    name: armbian-image
       #   path: |
       #     ./output/images/
          ##  ./output/images/${{ env.IMAGE_NAME }}*.img
          ##  ./build/output/images/*.img
